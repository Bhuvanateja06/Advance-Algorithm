#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <openssl/sha.h>

std::string sha256(const std::string& input) {
    unsigned char hash[SHA256_DIGEST_LENGTH];
    SHA256_CTX sha256;
    SHA256_Init(&sha256);
    SHA256_Update(&sha256, input.c_str(), input.size());
    SHA256_Final(hash, &sha256);

    std::stringstream ss;
    for (int i = 0; i < SHA256_DIGEST_LENGTH; i++) {
        ss << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(hash[i]);
    }

    return ss.str();
}

int main() {
    std::ifstream file("mark.txt");
    if (!file) {
        std::cerr << "Error opening file!" << std::endl;
        return 1;
    }

    std::string line, text;
    while (std::getline(file, line)) {
        text += line + " ";
    }

    // Remove unnecessary characters (punctuation, etc.)
    text.erase(std::remove_if(text.begin(), text.end(), [](char c) {
        return !std::isalnum(c) && !std::isspace(c);
    }), text.end());

    std::string hash = sha256(text);
    std::cout << "SHA-256 hash of the book of Mark: " << hash << std::endl;

    return 0;
}
